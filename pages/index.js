import { ethers } from 'ethers';
import detectEthereumProvider from '@metamask/detect-provider'
import { CONTRACT_ADDRESS } from "../utils/address";
import abi from "../utils/ClearFeed.json"

import Head from 'next/head'
import Image from 'next/image'
import Btn from "../assets/Button.svg";

import toast, { Toaster } from 'react-hot-toast';

export default function Home() {
  
  const handleClick = async() => {
    const ethereum = await detectEthereumProvider({mustBeMetaMask : true})

    if (ethereum) {
      const provider = new ethers.providers.Web3Provider(ethereum)
      let accounts 
      try {
        accounts = await provider.send("eth_requestAccounts", []);
      } catch(error) {
        toast("Can't continue without connecting wallet", {
          icon: 'ðŸ¤·',
        });
        
      }

      if (accounts) {
        const signer = provider.getSigner();
        const contract = new ethers.Contract(CONTRACT_ADDRESS, abi.abi, signer);
        try {
          await contract.safeMint('zero','one','two') 
        }
        catch(error) {
          console.log(error)
        }
      }
    } else {  
      console.log('here')
    }


    // try {
    //   const { ethereum } = window
    //   if (ethereum) {
    //     const provider = new ethers.providers.Web3Provider(ethereum);
        
    //     let accounts 
    //     try {
    //       accounts = await provider.send("eth_requestAccounts", []);
    //     } catch(error) {
    //       toast("Can't continue without connecting wallet", {
    //         icon: 'ðŸ¤·',
    //       });
          
    //     }

    //     if (accounts) {
    //       const signer = provider.getSigner();
    //       const contract = new ethers.Contract(CONTRACT_ADDRESS, abi.abi, signer);
    //       try {
    //         await contract.safeMint('zero','one','two') 
    //       }
    //       catch(error) {
    //         console.log(error)
    //       }
    //     }
    //   }
    // } catch(error) {
    //   toast('You need metamask to make this work!', {
    //     icon: 'ðŸ¤·',
    //   });
      
    // }
  }

  return (
    <div>
      <Toaster />
      <Head>
        <title>Clear Feed</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/surf.png" />
      </Head>

      <main>
        <div className='w-full h-screen bg-cf-light-blue'>
          <div className='flex w-full h-[calc(20%)] items-center justify-around'>

            {/* placeholder for top left content */}
            <div>
            </div>

            <div className='flex'>
              <h1 className='font-bold text-4xl'>Clear Feed</h1>
            </div>

            {/* placeholder for top right content */}
            <div>
            </div>

          </div>
          
          <div className='flex px-5 w-full h-[calc(80%)] justify-center items-center'>
            <div className='flex flex-col space-y-10 justify-center items-center'>
              <h2 className='text-center text-4xl sm:text-6xl font-bold'>
              Personalized content <br/>
              while keeping your data private
              </h2>

              <button onClick={handleClick}>
                <Image src={Btn} alt="button" height={100} width={200} />
              </button>

            </div>
          </div> 

        </div>
      </main>

      <footer>
      </footer>
    </div>
  )
}
